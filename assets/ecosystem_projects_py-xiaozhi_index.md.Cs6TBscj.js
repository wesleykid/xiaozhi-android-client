import{_ as i,c as s,o as e,ae as t}from"./chunks/framework.BwJUVDD3.js";const u=JSON.parse('{"title":"小智Python端","description":"使用Python实现的小智语音客户端，旨在通过代码学习和在没有硬件条件下体验AI小智的语音功能","frontmatter":{"title":"小智Python端","description":"使用Python实现的小智语音客户端，旨在通过代码学习和在没有硬件条件下体验AI小智的语音功能"},"headers":[],"relativePath":"ecosystem/projects/py-xiaozhi/index.md","filePath":"ecosystem/projects/py-xiaozhi/index.md"}'),l={name:"ecosystem/projects/py-xiaozhi/index.md"};function h(n,a,o,r,d,c){return e(),s("div",null,a[0]||(a[0]=[t('<h1 id="小智python客户端" tabindex="-1">小智Python客户端 <a class="header-anchor" href="#小智python客户端" aria-label="Permalink to &quot;小智Python客户端&quot;">​</a></h1><div class="project-header"><div class="project-badges"><span class="badge platform">跨平台</span><span class="badge language">Python</span><span class="badge status">稳定版本</span></div></div><h2 id="项目简介" tabindex="-1">项目简介 <a class="header-anchor" href="#项目简介" aria-label="Permalink to &quot;项目简介&quot;">​</a></h2><p>py-xiaozhi 是一个使用 Python 实现的小智语音客户端，旨在通过代码学习和在没有硬件条件下体验 AI 小智的语音功能。支持语音输入与识别，实现智能人机交互，提供自然流畅的对话体验。</p><div class="app-showcase"><div class="showcase-description"><p>py-xiaozhi 提供了跨平台的小智语音交互体验，不仅支持GUI界面，还提供命令行模式，适用于各种环境。通过简单易用的接口和丰富的功能，让用户能够方便地与AI进行语音和文字交流。</p></div></div><h2 id="核心功能" tabindex="-1">核心功能 <a class="header-anchor" href="#核心功能" aria-label="Permalink to &quot;核心功能&quot;">​</a></h2><div class="features-grid"><div class="feature-card"><div class="feature-icon">🗣️</div><h3>AI语音交互</h3><p>支持语音输入与识别，实现智能人机交互，提供自然流畅的对话体验</p></div><div class="feature-card"><div class="feature-icon">👁️</div><h3>视觉多模态</h3><p>支持图像识别和处理，提供多模态交互能力，理解图像内容</p></div><div class="feature-card"><div class="feature-icon">🏠</div><h3>IoT 设备集成</h3><p>支持智能家居设备控制，实现更多物联网功能，打造智能家居生态</p></div><div class="feature-card"><div class="feature-icon">🎵</div><h3>联网音乐播放</h3><p>基于pygame实现的高性能音乐播放器，支持歌词显示和本地缓存</p></div><div class="feature-card"><div class="feature-icon">🔊</div><h3>语音唤醒</h3><p>支持唤醒词激活交互，免去手动操作的烦恼（默认关闭需要手动开启）</p></div><div class="feature-card"><div class="feature-icon">💬</div><h3>自动对话模式</h3><p>实现连续对话体验，提升用户交互流畅度</p></div></div><h2 id="功能亮点" tabindex="-1">功能亮点 <a class="header-anchor" href="#功能亮点" aria-label="Permalink to &quot;功能亮点&quot;">​</a></h2><h3 id="图形化界面与命令行模式" tabindex="-1">图形化界面与命令行模式 <a class="header-anchor" href="#图形化界面与命令行模式" aria-label="Permalink to &quot;图形化界面与命令行模式&quot;">​</a></h3><div class="feature-highlight"><div class="highlight-content"><h3>多种运行模式</h3><ul><li>提供直观易用的 GUI，支持小智表情与文本显示</li><li>支持 CLI 运行，适用于嵌入式设备或无 GUI 环境</li><li>跨平台支持，兼容 Windows 10+、macOS 10.15+ 和 Linux 系统</li><li>统一的音量控制接口，适应不同环境需求</li></ul></div></div><h3 id="安全稳定的连接" tabindex="-1">安全稳定的连接 <a class="header-anchor" href="#安全稳定的连接" aria-label="Permalink to &quot;安全稳定的连接&quot;">​</a></h3><div class="feature-highlight reverse"><div class="highlight-content"><h3>优化的连接体验</h3><ul><li>支持 WSS 协议，保障音频数据的安全性</li><li>首次使用时，程序自动复制验证码并打开浏览器</li><li>自动获取 MAC 地址，避免地址冲突</li><li>断线重连功能，保证连接稳定性</li><li>跨平台兼容性优化</li></ul></div></div><h2 id="系统要求" tabindex="-1">系统要求 <a class="header-anchor" href="#系统要求" aria-label="Permalink to &quot;系统要求&quot;">​</a></h2><ul><li><strong>Python</strong>: 3.8+</li><li><strong>操作系统</strong>: Windows 10+, macOS 10.15+, Linux</li><li><strong>依赖</strong>: PyAudio, PyQt5, pygame, websocket-client等</li></ul><h2 id="安装与使用" tabindex="-1">安装与使用 <a class="header-anchor" href="#安装与使用" aria-label="Permalink to &quot;安装与使用&quot;">​</a></h2><h3 id="安装方法" tabindex="-1">安装方法 <a class="header-anchor" href="#安装方法" aria-label="Permalink to &quot;安装方法&quot;">​</a></h3><ol><li>克隆项目仓库:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/huangjunsen0406/py-xiaozhi.git</span></span></code></pre></div><ol start="2"><li>安装依赖:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> requirements.txt</span></span></code></pre></div><ol start="3"><li>运行应用:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">python</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> main.py</span></span></code></pre></div><h2 id="配置说明" tabindex="-1">配置说明 <a class="header-anchor" href="#配置说明" aria-label="Permalink to &quot;配置说明&quot;">​</a></h2><p>客户端支持多种配置选项:</p><ul><li>语音输入/输出设备选择</li><li>音量控制</li><li>唤醒词设置</li><li>服务器连接设置</li><li>GUI/CLI模式切换</li></ul><h2 id="相关链接" tabindex="-1">相关链接 <a class="header-anchor" href="#相关链接" aria-label="Permalink to &quot;相关链接&quot;">​</a></h2><ul><li><a href="https://github.com/huangjunsen0406/py-xiaozhi" target="_blank" rel="noreferrer">项目GitHub仓库</a></li><li><a href="https://github.com/huangjunsen0406/py-xiaozhi/issues" target="_blank" rel="noreferrer">问题反馈</a></li></ul>',27)]))}const g=i(l,[["render",h]]);export{u as __pageData,g as default};
